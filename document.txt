説明書

このゲームって何をするの？
アイコン（PC）を動かして、ゲームの中のキャラクター（NPC）をゴールまで導くパズルゲーム。
PCは、ブロックのアルゴリズムによって動き、様々な動きをするよ。

ゲーム中に出てくる言葉
【NPC】
自由に動かせないキャラクター。
まっすぐ進み続けるよ。
前に「かべ」があるとき、左右に動けるならば右に移動するよ。
前に「かべ」があるとき、左右に動けないならば後ろに移動するよ。
【PC】
ブロックを通して動かすことができるキャラクター。
ブロックに書かれていることを順番に正しく行動するよ。
【かべ】
NPCは進めないし、こわせないよ。
【いわ】
NPCの移動をじゃまするけど、PCの動きによってこわせるよ。
【ゆか】
NPCの移動をじゃましないし、安全に通れるよ。
【バネ】
一マス開けて進むよ。
どんなマスであっても一マス開けてとべるよ。
【ステージ説明】
STAGE-1
◎ゴールの導き方を理解しよう
・NPCからゴールまでの道のりを「いわ」がふさいでいるので、こわしてあげよう！
STAGE-2
◎繰り返しの使い方を理解しよう
・今度は複数の「いわ」が道をふさいでいる
　コストを節約するため、繰り返しを使って連続でこわそう！
STAGE-3
「いわ」を置くことでゴールさせてみよう
・「いわ」を置いてゴールさせる方法も存在する
　道を作ってゴールまで導いてあげよう！
STAGE-4
条件によって行動を変えてみよう
・「いわ」をこわすべきマスと置くべきマスを分けるために条件分岐ブロックを使ってみよう！
STAGE-5
パズルを解いてみよう その1
STAGE-6
パズルを解いてみよう その2


アルゴリズム思考力：
NPCの移動を
ある問題に対して、それを解決するために問題を細分化して解決方法を導き出す思考力
コーディング力とは別物で、既知の知識や処理構造を組み合わせることが主題
盤面
任意の正の整数 H, W を用いて「縦 H マス、横 W マスに広がる」と言い表せるようなマスの集合
マスは正方形
NPC
ユーザには操作できないキャラクター。
現時点では人型の画像で表現される。
このキャラクターは、一定の決まりに従って行動を繰り返す。これを NPC 行動ルーチンと呼ぶ。NPC 行動ルーチンを以下に示す。
NPCの目前が床であるならば、そこに移動する。
そうでないならば、自身の左右マスを確認する。
片方が床で片方が壁か石ならば、床がある方に旋回する。
どちらとも床ならば、NPC から見て右へ旋回する。
どちらとも壁か石ならば、180 度旋回する。
問題
盤面、PC / NPC の初期位置、ゴールの位置、後述するユーザプログラムのコスト上限 の情報を含み、NPC をゴールに導く方法が存在するようなもの。
ユーザは NPC をゴールに導くことを目的として行動する。
ユーザプログラム
ユーザが blockly を用いて配置したプログラムのこと。
これに従って PC が NPC に先立って行動を開始し、その終了後に NPC が NPC 行動ルーチンに従って行動する。
行動内容にコストが設定されており、問題に設定された上限コストを超えるプログラムは実行のみができない。
詳細
パズルゲームの詳細
形式
ユーザの操作内容としては以下の通り。

PC を操作するユーザプログラムを記述する。
PC はユーザプログラムの通りに行動し、その終了を受けて NPC が行動開始するので、NPC がゴールにたどり着ければクリア。
ゲーム全体の構造
パズルゲームという形式でかつ繰り返し、条件分岐や変数などを活用できるようにする。
問題は幾つかの難易度に軽く分ける。
複雑な処理構造を必要としない
繰り返し、条件分岐、変数のいずれかが必要
繰り返し、条件分岐、変数を複雑に組み合わせる
これは相当余裕があれば実装。再帰などの本格的なアルゴリズムに触れる
現在実装している問題の一覧
複雑な処理構造を必要としないもの
PCがブロックを破壊し、NPCのゴールまでの導き方を教えるチュートリアル問題
繰り返しを必要とするもの
一問目のブロック破壊を慣らせると同時に、繰り返しと変数の使い方を教えるチュートリアル問題
ブロックの配置を必要とするもの
二問目の繰り返しを慣らせると同時に、ブロックを配置してゴールまで辿り着かせるチュートリアル問題
条件分岐を必要とするもの
ブロック破壊/配置を、条件分岐によって各場面で使わせるチュートリアル問題
パズル問題1
ルートを自分で考えさせる中級問題1
パズル問題2
ルートを自分で考えさせる中級問題2
将来的に実装したいもの
数問解いたあたりで、ユーザが問題を自作できるようなモードを解放する
ユーザが早期に離れるのを防止したい
もっとギミックを増やす
まだ単調すぎる
プログラムの詳細
画面仕様
初期状態
↑が盤面初期状態の画面。

左上
盤面そのもの。
灰色のチップは壁を表現する。
茶色のチップは石を表現する。
緑色のチップは床を表現する。
右上
問題がもつ情報のうち、ユーザプログラムの現在のコスト、コスト上限を表示。
ユーザプログラムを実行するボタン、問題そのものをやり直すボタンを配置。
下
ユーザプログラムを記述する。
プログラミング中

下部の blockly によって実装されたブロックプログラミング環境で、PC を動かすためのプログラムを実装する。
実行中

開始ボタンを押すとユーザプログラムが実行され、カーソルが移動したり石が配置、消去される。
その後、NPC が移動を開始する。
その他
動作環境
Chrome
Edge
プログラミングに使用した言語
HTML + CSS
JavaScript
サーバ ランタイム
deno
GitHub
https://github.com/WhiteF326/0818_newDev
その他、使用したライブラリ
ブロックプログラミング環境 blockly
JavaScript 整形ツール ESLint

・作品の正式名称
・イメージカラー
・アイコン
